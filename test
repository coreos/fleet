#!/bin/bash 
#
# Run all fleet tests (not including functional)
#   ./test
#   ./test -v
#
# Run tests for one package
#   PKG=./unit ./test
#   PKG=ssh ./test
#

# Invoke ./cover for HTML output
COVER=${COVER:-"-cover"}

source ./build

TESTABLE="agent api config engine fleetctl job machine pkg pkg/lease registry ssh systemd unit"
FORMATTABLE="$TESTABLE client functional functional/platform heart server fleetd"

# user has not provided PKG override
if [ -z "$PKG" ]; then
	TEST=$TESTABLE
	FMT=$FORMATTABLE

# user has provided PKG override
else
	# strip out slashes and dots from PKG=./foo/
	TEST=${PKG//\//}
	TEST=${TEST//./}

	# only run gofmt on packages provided by user
	FMT="$TEST"
fi

# split TEST into an array and prepend REPO_PATH to each local package
split=(${TEST// / })
TEST=${split[@]/#/${REPO_PATH}/}
RET=0

echo "Running tests..."
testRes=$(go test $COVER $@ $TEST)
if [ $? != 0 ]; then
	echo -e "go test checking failed:\n\n${testRes}"
	RET=255
else
	echo -e "go test succeeds:\n\n${testRes}"
fi

echo -e "\nChecking gofmt..."
fmtRes=$(gofmt -l $FMT)
if [ -n "${fmtRes}" ]; then
	echo -e "gofmt checking failed:\n${fmtRes}"
	RET=255
else
	echo "gofmt succeeds."
fi

echo "Checking govet..."
vetRes=$(go vet $TEST)
if [ -n "${vetRes}" ]; then
	echo -e "govet checking failed:\n${vetRes}"
	RET=255
else
	echo "go vet succeeds."
fi

exit $RET
