#!/bin/bash -e

ORG_PATH="github.com/coreos"
REPO_PATH="${ORG_PATH}/fleet"
VERSION=$(git describe --dirty)
CODE_VER_SYMBOL="github.com/coreos/fleet/version.Version"
GO_VERSION=$(go version)

GLDFLAGS=""

if [ ! -h gopath/src/${REPO_PATH} ]; then
	mkdir -p gopath/src/${ORG_PATH}
	ln -s ../../../.. gopath/src/${REPO_PATH} || exit 255
fi

export GOBIN=${PWD}/bin
export GOPATH=${PWD}/gopath

_oifs=$IFS
IFS=" "
read -r -a go_ver <<< "${GO_VERSION}"
if [[ ${go_ver[2]} == "go1.4"* ]]; then
	GLDFLAGS="-X ${CODE_VER_SYMBOL} \"${VERSION}\""
else
	# go > 1.4 uses param=value format
	GLDFLAGS="-X ${CODE_VER_SYMBOL}=\"${VERSION}\""
fi

IFS=$_oifs

eval $(go env)

if [ ${GOOS} = "linux" ]; then
	echo "Building fleetd..."
	CGO_ENABLED=0 go build -o bin/fleetd -a -installsuffix netgo -ldflags "${GLDFLAGS}" ${REPO_PATH}/fleetd
else
	echo "Not on Linux - skipping fleetd build"
fi

echo "Building fleetctl..."
CGO_ENABLED=0 go build -o bin/fleetctl -a -installsuffix netgo -ldflags "${GLDFLAGS}" ${REPO_PATH}/fleetctl
